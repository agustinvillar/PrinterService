@using Menoo.PrinterService.Infraestructure.Database.Firebase.Entities
@using System.Globalization
@model System.Collections.Generic.Dictionary<string, object>
@{
    bool allowLogo = Convert.ToBoolean(Model["allowLogo"]);
}<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8" />
        <title></title>
        <style>
        @Model["style"].ToString()
        </style>
    </head>
    <body>
        <div class="invoice-pos">
            <div class="section-center invoince-header">
                <div class="section-center invoince-header">
                    <div class="section-center">
                        @if (allowLogo)
                        {
                            <img class="img-logo" src="@Model["logo"].ToString()" alt="MENOO" />
                        }
                        else
                        {
                            <span class="title">MENOO</span>
                        }
                    </div>
                </div>
                <div class="section-center uppercase">
                    @Model["title"].ToString()
                </div>
            </div>
            @{
                <div class="row">
                    <div class="column-50 section-left"><b>N° mesa:</b> @Model["tableNumber"].ToString()</div>
                    <div class="column-50 section-right"><b>Fecha:</b> @Model["requestPaymentTimeAt"].ToString()</div>
                </div>
                <div class="row">
                    <div class="section-left"><b>Cliente:</b> @Model["userName"].ToString()</div>
                </div>
            }
            <div class="row"><hr /></div>
            <div class="row section-custom-header uppercase">
                <div class="section-center"><b>Pedidos</b></div>
            </div>
            @BuildContent()
            <div class="row">&nbsp;</div>
        </div>
    </body>
</html>

@helper BuildContent()
{
    double preSubTotal = 0d;
    var tableOpeningFamily = (TableOpeningFamily)Model["tableOpeningFamilyData"];
    foreach (var tableOpening in tableOpeningFamily.TableOpenings)
    {
        foreach (Order order in tableOpening.Orders)
        {
            @foreach (ItemOrder item in order.Items)
            {
                <div class="row">
                    <div class="column-50 section-left">
                        <span class="item-quantity section-left">@item.Quantity.GetValueOrDefault() x </span><b>@item.Name</b>
                    </div>
                    <div class="column-50 section-right">
                        @{
                            if (item.PriceWithDiscount.GetValueOrDefault() != item.Price.GetValueOrDefault())
                            {
                                <span class="invalid-text">$@Convert.ToDecimal(item.Price.GetValueOrDefault()).ToString("N2", CultureInfo.CreateSpecificCulture("en-US"))</span>
                            }
                        }
                        $@Convert.ToDecimal(item.PriceWithDiscount).ToString("N2", CultureInfo.CreateSpecificCulture("en-US"))
                    </div>
                </div>
                @if (item.Options != null && item.Options.Count > 0)
                {
                    foreach (ItemOption option in item.Options)
                    {
                        string extraName = option.Price == 0 ? "Opción: " + option.Name : "Opción: " + option.Quantity + " x " + option.Name;
                        <div class="row">
                            @if (option.Price > 0)
                            {
                                <div class="column-80 section-left">
                                    @extraName
                                </div>
                                <div class="column-20 section-right">
                                    $@Convert.ToDecimal(option.Price).ToString("N2", CultureInfo.CreateSpecificCulture("en-US"))
                                </div>
                            }
                            else
                            {
                                <div class="column">
                                    @extraName
                                </div>
                            }
                        </div>
                    }
                    if (!string.IsNullOrEmpty(item.GuestComment))
                    {
                        <div class="row">
                            <div class="column item-detail">* @item.GuestComment</div>
                        </div>
                    }
                }
                else if (!string.IsNullOrEmpty(item.GuestComment))
                {
                    <div class="row">
                        <div class="column item-detail">* @item.GuestComment</div>
                    </div>
                }
                else 
                {
                    <div class="row">&nbsp;</div>
                }
                <div class="row">&nbsp;</div>
            }
            preSubTotal += GetPreSubtotal(order);
        }
        if (tableOpening.CutleryPriceTotal != null && tableOpening.CutleryPriceTotal.GetValueOrDefault() > 0)
        {
            var culteryPriceAmount = Convert.ToDecimal(tableOpening.CutleryPriceTotal.GetValueOrDefault()).ToString("N2", CultureInfo.CreateSpecificCulture("en-US"));
            <div class="row">&nbsp;</div>
            <div class="row">
                <div class="column-50 section-left">@tableOpening.CulteryPriceQuantity.GetValueOrDefault() x Cubierto(s)</div>
                <div class="column-50 section-right">$@culteryPriceAmount</div>
            </div>
        }
        if (tableOpening.ArtisticCutleryQuantity != null && tableOpening.ArtisticCutleryTotal.GetValueOrDefault() > 0)
        {
            var artisticCutleryTotal = Convert.ToDecimal(tableOpening.ArtisticCutleryTotal.GetValueOrDefault()).ToString("N2", CultureInfo.CreateSpecificCulture("en-US"));
            <div class="row">&nbsp;</div>
            <div class="row">
                <div class="column-50 section-left">@tableOpening.ArtisticCutleryQuantity.GetValueOrDefault() x Cubierto(s) artístico</div>
                <div class="column-50 section-right">$@artisticCutleryTotal</div>
            </div>
        }
    }
    <div class="row">&nbsp;</div>
    <div class="row">&nbsp;</div>
    <div class="row">&nbsp;</div>
    <div class="row"><hr /></div>
    <div class="row">
        <div class="column-50 section-left">Total a pagar:</div>
        <div class="column-50 section-right">@GetSubtotal(preSubTotal, tableOpeningFamily)</div>
    </div>
}

@functions {
    public double GetPreSubtotal(Order orderData)
    {
        double result = 0d;
        foreach (ItemOrder item in orderData.Items)
        {
            result += item.Total.GetValueOrDefault();
        }
        return result;
    }

    public string GetSubtotal(double preSubtotal, TableOpeningFamily tableOpeningFamily)
    {
        double result = preSubtotal;
        foreach (TableOpening tableOpening in tableOpeningFamily.TableOpenings)
        {
            if (tableOpening.CutleryPriceTotal != null && tableOpening.CutleryPriceTotal.GetValueOrDefault() > 0)
            {
                result += tableOpening.CutleryPriceTotal.GetValueOrDefault();
            }
            if (tableOpening.ArtisticCutleryQuantity != null && tableOpening.ArtisticCutleryTotal.GetValueOrDefault() > 0)
            {
                result += tableOpening.ArtisticCutleryTotal.GetValueOrDefault();
            }
        }
        string total = Convert.ToDecimal(result).ToString("N2", CultureInfo.CreateSpecificCulture("en-US"));
        return "$" + total;
    }
}
